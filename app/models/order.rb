class Order < ApplicationRecord
	
  belongs_to :cart

  enum status: [:ordered, :payed, :in_progress, :sent]

  validates :name, :address, :email, presence: true
  validates :status, inclusion: statuses.keys



after_create :mail_order_done
  def mail_order_done
    OrderMailer.mail_order(self).deliver_now

    puts 'Commande validé -> Email envoyé'
	puts '##########################################################################################'  
	puts '##########################################################################################'  
	puts '##########################################################################################'  
	puts '##########################################################################################'  
	puts '##########################################################################################'  
	puts '##########################################################################################'  
	puts '##########################################################################################'  
	puts '##########################################################################################'  
  end


  after_create :mail_order_done_seller
  def mail_order_done_seller
    OrderMailer.mail_order_seller(self).deliver_now
    puts 'Produit vendu -> Email envoyé'
puts '@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@'  
puts '@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@'
puts '@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@'
puts '@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@'
puts '@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@'
  end



end
